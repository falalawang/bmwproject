<?php
namespace Admin\Controller;
use Think\Controller;
class OrderController extends CommonController{
	//订单列表
	public function index(){
		$model = M('order');
		$order = $model ->field('id,carType,combo,lastPrice,vin,orderTime,orderDate,orderStatus,address,telephone,user')
						-> where("orderStatus!='0'")
						-> order('orderStatus asc')
						-> select();
		$count = 1;
		foreach($order as $k=>$v){
			//用空格分隔车型
			$types = explode(",",$v['carType']);
			//用,分隔套餐
			$arr = explode(',',$v['combo']);
			//车的品牌
			$brand = $types[0];
			//车系
			$series = $types[1];
			//车型
			$types = $types[2];
			//将查询出的所有套餐放到下标为combo的数组中
			$order[$k]["combo"] = $arr;

			$Ty = M('models');
			$type = $Ty -> field('id')
						-> where("brand='$brand' and series='$series' and types='$types'")
						-> select();
			//获取用户车型对应车型表中的id
			$typeId = $type[0]['id'];
			$num = 0;
			//遍历，查找出套餐对应的价格对应
			foreach($arr as $value){
				$combos = M('combo');
				$combo = $combos -> field('lowPrice,highPrice')
								 -> where("typeId=$typeId and comboName='$value'")
								 -> select();

				//将价格与套餐连接在一起
				foreach($combo as $c){
					if(!empty($c['highPrice'])){
						$order[$k]["combo"][$num] = $value.":".$c['lowPrice'].'-'.$c['highPrice'];
					}else{
						$order[$k]["combo"][$num] = $value.":".$c['lowPrice'];
					}
				}
				
				$num++;
			}
			$order[$k]['count']=$count;			
			$count++;		
		}

		$this -> assign('orders',$order);
		$this -> display();
	}
	//已取消的订单列表
	public function cancel(){
		$model = M('order');
		$order = $model ->field('id,carType,combo,lastPrice,vin,orderTime,orderDate,orderStatus,address,telephone,user')
						-> where("orderStatus='0'")
						-> order('orderStatus asc')
						-> select();
		$count = 1;
		foreach($order as $k=>$v){
			//用空格分隔车型
			$types = explode(",",$v['carType']);
			//用,分隔套餐
			$arr = explode(',',$v['combo']);
			//车的品牌
			$brand = $types[0];
			//车系
			$series = $types[1];
			//车型
			$types = $types[2];
			//将查询出的所有套餐放到下标为combo的数组中
			$order[$k]["combo"] = $arr;

			$Ty = M('models');
			$type = $Ty -> field('id')
						-> where("brand='$brand' and series='$series' and types='$types'")
						-> select();
			//获取用户车型对应车型表中的id
			$typeId = $type[0]['id'];
			$num = 0;
			//遍历，查找出套餐对应的价格对应
			foreach($arr as $value){
				$combos = M('combo');
				$combo = $combos -> field('lowPrice,highPrice')
								 -> where("typeId=$typeId and comboName='$value'")
								 -> select();

				//将价格与套餐连接在一起
				foreach($combo as $c){
					if(!empty($c['highPrice'])){
						$order[$k]["combo"][$num] = $value.":".$c['lowPrice'].'-'.$c['highPrice'];
					}else{
						$order[$k]["combo"][$num] = $value.":".$c['lowPrice'];
					}
				}
				
				$num++;
			}
			$order[$k]['count']=$count;			
			$count++;		
		}

		$this -> assign('orders',$order);
		$this -> display();
	}
	//编辑订单状态
	public function modStatus(){
		$order = M('order');
		if($order -> create($_POST)){
			if($order -> save()){
				$this -> success('更新成功',U('Order/index'));
			}else{
				$this -> error('更新失败',U('Order/index'));
			}
		}else{
			$this -> error('失败',U('Order/index'));
		}
	}
	//修改订单
	public function mod(){
		//得到要修改订单的id
		$id = I('get.id');
		$orders = M('order');
		//查询订单表中的一些数据
		$order = $orders	->field('id,carType,combo,orderDate,orderTime,user,telephone,address')
						-> where("id=$id")
						-> select();
		$order[0]['combo'] = explode(",",$order[0]['combo']);
		//分隔数组中的carType,得到当前用户的品牌,车系,车型
		$carType = explode(",",$order[0]['carType']);
		//当前用户的车的品牌
		$brand = $carType[0];
		//当前用户的车系
		$series = $carType[1];
		//当前用户的车型
		$types = $carType[2];

		//查询当前用户车型对应车型表中的id，并查询对应此车型的所有套餐及价格
		$models = M('models');
		$model = $models -> field('id')
						 -> where("brand='$brand' and series='$series' and types='$types'")
						 -> select();
		foreach($model as $v){	
			$typeId = $v['id'];
		}
		//查询车型id为$v['id']的所有套餐及价格
		$combos = M('combo');
		$combo = $combos -> field('comboName,lowPrice,highPrice')
						 -> where("typeId=$typeId")
						 -> select();

		//将此车型对应的所有套餐
		$this -> assign('combos',$combo);
		//将订单的一些数据发送到模板
		$this -> assign('order',$order);
		$this -> display();
	}
	//更新订单
	public function updateOrder(){
		//分隔车型
		$carType = explode(",",$_POST['carType']);
		//车的品牌
		$brand = $carType[0];
		//车系
		$series = $carType[1];
		//车型
		$types = $carType[2];
		//从车型表中查找出对应的id
		$models = M('models');
		$model = $models -> field('id')
						 -> where("brand='$brand' and series='$series' and types='$types'")
						 -> select();
		$typeId = $model[0]['id'];

		foreach($_POST['combo'] as $v){
			$combos= M('combo');
			$combo = $combos -> field('id,lowPrice,highPrice')
							 -> where("typeId=$typeId and comboName='$v'")
							 -> select();
			foreach($combo as $v){
				$lowPrice += $v['lowPrice'];
				$highPrice += $v['highPrice'];
			}
			

		}
		dump($lowPrice);
		echo $highPrice;
		dump($_POST);
		//dump($carType);
		//将post接收过来的数组套餐连接成字符串
		$_POST['combo'] = implode(",",$_POST['combo']);
		//dump($_POST);
		die;
		$order = M('order');
		if($order -> create($_POST)){
			if($order -> save()){
				$this -> success('修改成功',U('Order/index'));
			}else{
				$this -> error('修改失败','mod');
			}
		}else{
			$this -> error('失败','mod');
		}
	}
	//取消订单
	public function cancelOrder(){
		$id = I('get.id');
		$order = M('order');
		$data['id'] = $id;
		$data['orderStatus'] = '0';
		if($order -> create($data)){
			if($order -> save()){
				$this -> success('取消成功',U('Order/index'));
			}else{
				$this -> error('取消失败',U('Order/index'));
			}
		}else{
			$this -> error('失败',U('Order/index'));
		}
	}
	//删除订单
	public function del(){
		$id = I('get.id');
		$order = M('order');
		if($order -> delete($id)){
			$this -> success('删除成功',U('Order/cancel'));
		}else{
			$this -> error('删除失败',U('Order/cancel'));
		}
	}
	//更新订单状态
	public function updateStatus(){
		$data['orderStatus'] = (string)$_GET['orderStatus'];
		$data['id'] = $_GET['orderId'];
		$orders = M('order');
		if($orders -> create($data)){
			if($orders -> save()){
				echo 'success';
			}else{
				echo 'error1';
			}
		}else{
			echo 'error2';
		}
	}
}
?>